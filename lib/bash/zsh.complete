# pe
# fpath=(/cygdrive/e/nnotes/dev/rc/lib/bash/fpath
# # fpath=( ~/.zfunc "${fpath[@]}" ) # https://unix.stackexchange.com/questions/33255/how-to-define-and-load-your-own-shell-function-in-zsh
# autoload -Uz _pe    # complete for pe, python virtual environment

# meta_s
# autoload -Uz compdef

# autoload -Uz compinit && compinit -C

# https://gist.github.com/ctechols/ca1035271ad134841284
autoload -Uz compinit 
# echo $ZDOTDIR
# ls -l ${ZDOTDIR}/.zcompdump
# if [[ -n ${ZDOTDIR}/.zcompdump(#qN.mh+24) ]]; then
  setopt EXTENDEDGLOB
if [[ -n ${ZDOTDIR}/.zcompdump(#qN.m1) ]]; then
    echo "too old"
	compinit;
    touch ${ZDOTDIR}/.zcompdump;
else
	compinit -C;
fi;
  unsetopt EXTENDEDGLOB
# From my experience, compinit won't update the compdump file if it hasn't changed,

pe() { . "$HOME/venv/$1/bin/activate"; }
compdef '_files -f -W "$HOME/venv"' pe

compdef gi=git

return $?

https://mads-hartmann.com/2017/08/06/writing-zsh-completion-scripts.html
https://github.com/zsh-users/zsh-completions/blob/master/zsh-completions-howto.org

function _hello {
    local line

    _arguments -C \
        "-h[Show help information]" \
        "--h[Show help information]" \
        "1: :(quietly loudly)" \
        "*::arg:->args"

    case $line[1] in
        loudly)
            _hello_loudly
        ;;
        quietly)
            _hello_quietly
        ;;
    esac
}

function _hello_quietly {
    _arguments \
        "--silent[Dont output anything]"
}

function _hello_loudly {
    _arguments \
        "--repeat=[Repat the <message> any number of times]"
}
compdef _hello hello
